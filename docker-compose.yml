version: "3.5"
services:
#  eureka-server:
#    build: eureka-server/
#    container_name: eureka-server
#    restart: always
#    network_mode: "host"
#    hostname: localhost
#    ports:
#      - 8076:8076
#
#  config-server:
#    build: config-server/
#    container_name: config-server
#    restart: always
#    network_mode: "host"
#    hostname: localhost
#    depends_on:
#      - eureka-server
#    ports:
#      - 8888:8888

  api-gateway:
    build: api-gateway/
    container_name: api-gateway
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8080:8080

  cooperai:
    build: cooperai/
    container_name: cooperai
    restart: always
#    network_mode: "host"
    hostname: localhost
    ports:
      - 8085:8085

  webapp:
    build: webapp/
    container_name: webapp
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 4200:4200

#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
#    container_name: elasticsearch
#    environment:
#      - node.name=elasticsearch
#      - cluster.name=elasticsearch
#      - discovery.type=single-node
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    ports:
#      - 9200:9200
#      - 9300:9300
##
#  kibana:
#    container_name: kb-container
#    image: docker.elastic.co/kibana/kibana:7.11.0
#    environment:
#      - ELASTICSEARCH_HOSTS=http://es-container:9200
##    networks:
##      - es-net
#    depends_on:
#      - elasticsearch
#    ports:
#      - 5601:5601
##  networks:
##    es-net:
##      driver: bridge

#  Elasticsearch:
#    image: elasticsearch:7.16.2
#    container_name: elasticsearch
#    restart: always
#    volumes:
#      - elastic_data:/usr/share/elasticsearch/data/
#    environment:
#      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
#      discovery.type: single-node
#    ports:
#      - '9200:9200'
#      - '9300:9300'
#    networks:
#      - elk
#
#  Logstash:
#    image: logstash:7.16.2
#    container_name: logstash
#    restart: always
#    volumes:
#      - ./logstash/:/logstash_dir
#    command: logstash -f /logstash_dir/logstash.conf
#    depends_on:
#      - Elasticsearch
#    ports:
#      - '9600:9600'
#    environment:
#      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
#    networks:
#      - elk
#
#  Kibana:
#    image: kibana:7.16.2
#    container_name: kibana
#    restart: always
#    ports:
#      - '5601:5601'
#    environment:
#      - ELASTICSEARCH_URL=http://elasticsearch:9200
#    depends_on:
#      - Elasticsearch
#    networks:
#      - elk
#volumes:
#  elastic_data: {}
#
#networks:
#  elk:


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - ./data/elasticsearch-data:/var/lib/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    restart: always

  kibana:
    image: kibana:7.6.2
    links:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    restart: always

  logstash:
    image: logstash:7.10.1
    environment:
      - STDOUT=true
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
      - kibana
    command: 'logstash -e "input { udp { port => 5000 } } output { elasticsearch { hosts =>     elasticsearch } }"'
    restart: always

  logspout:
    image: gliderlabs/logspout:master
    command: 'udp://logstash:5000'
    links:
      - logstash
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock'
    depends_on:
      - elasticsearch
      - logstash
      - kibana
    restart: always


#  logstash:
#    image: docker.elastic.co/logstash/logstash:7.9.1
#    ports:
#      - "5044:5044"
#      - "9600:9600"
#    volumes:
#      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
#    depends_on:
#      - elasticsearch